// Â© SS220, An EULA/CLA with a hosting restriction, full text: https://raw.githubusercontent.com/SerbiaStrong-220/space-station-14/master/CLA.txt
using Content.Client.SS220.Discord;
using Robust.Client.Console;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Client.AutoGenerated;
using Robust.Shared.Configuration;
using Content.Shared.SS220.CCVars;

namespace Content.Client.SS220.UserInterface.DiscordLink;

[GenerateTypedNameReferences]
public sealed partial class DiscordLinkRequiredGui : Control
{
    [Dependency] private readonly DiscordPlayerInfoManager _discordPlayerInfoManager = default!;
    [Dependency] private readonly IClientConsoleHost _consoleHost = default!;
    [Dependency] private readonly IConfigurationManager _cfg = default!;

    public DiscordLinkRequiredGui()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);
        LayoutContainer.SetAnchorPreset(this, LayoutContainer.LayoutPreset.Wide);

        ByPassCheck.Visible = _cfg.GetCVar(CCVars220.ByPassDiscordLinkCheck);

        QuitButton.OnPressed += (_) =>
        {
            _consoleHost.ExecuteCommand("quit");
        };

        UrlEdit.Text = _discordPlayerInfoManager.AuthUrl;
        OpenUrlButton.OnPressed += (_) =>
        {
            if (_discordPlayerInfoManager.AuthUrl != string.Empty)
            {
                IoCManager.Resolve<IUriOpener>().OpenUri(_discordPlayerInfoManager.AuthUrl);
            }
        };

        ByPassCheck.OnPressed += (_) =>
        {
            _discordPlayerInfoManager.ByPassCheck();
        };
    }
}
