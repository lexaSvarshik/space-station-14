// © SS220, An EULA/CLA with a hosting restriction, full text: https://raw.githubusercontent.com/SerbiaStrong-220/space-station-14/master/CLA.txt

using Content.Client.UserInterface.Controls;
using Content.Shared.SS220.Pinpointer;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.SS220.Pinpointer.UI;

[GenerateTypedNameReferences]
public sealed partial class PinpointerMenu : FancyWindow
{
    public Action<NetEntity>? OnTargetPicked;

    public HashSet<TrackedItem> CrewListCoords = [];

    private string _searchText = string.Empty;

    public PinpointerMenu()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        SearchBar.OnTextChanged += OnSearchChanged;
    }

    private void OnSearchChanged(LineEdit.LineEditEventArgs args)
    {
        _searchText = args.Text.Trim().ToLower();
        PopulateList();
    }

    public void PopulateList()
    {
        CrewList.RemoveAllChildren();

        foreach (var entry in CrewListCoords)
        {
            var button = CreateTargetButton(entry.Name, () => OnTargetPicked?.Invoke(entry.Entity));

            if (button == null)
                continue;

            CrewList.AddChild(button);
        }
    }

    private Button? CreateTargetButton(string fullName, Action onClick)
    {
        if (!fullName.Contains(_searchText, StringComparison.CurrentCultureIgnoreCase))
            return null;

        var button = new Button
        {
            ToolTip = fullName,
            StyleClasses = { "OpenBoth" },
            SetHeight = 30,
            Margin = new Thickness(5, 0, 5, 5),
            HorizontalExpand = true,
        };

        var label = new Label
        {
            Text = fullName,
            HorizontalExpand = true,
            HorizontalAlignment = HAlignment.Center,
        };

        button.OnPressed += _ => onClick();
        button.AddChild(label);

        return button;
    }
}
